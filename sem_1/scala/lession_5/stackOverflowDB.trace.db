2019-12-09 01:08:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Повтор имени столбца "BODY"
Duplicate column name "BODY"; SQL statement:

         create table posts(
          id Int,
          title varchar(1000),
          body varchar(1000),
          score Int,
          viewCount Int,
          answerCount Int,
          commentCount Int,
          ownerUserId Int,
          lastEditorUserId Int,
          acceptedAnswerId Int,
          creationDate timestamp,
          lastEditDate timestamp,
          lastActivityDate timestamp,
          body varchar(1000)
         )
        [42121-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.setColumns(Table.java:431)
	at org.h2.table.TableBase.<init>(TableBase.java:46)
	at org.h2.mvstore.db.MVTable.<init>(MVTable.java:128)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:109)
	at org.h2.mvstore.db.MVTableEngine.createTable(MVTableEngine.java:42)
	at org.h2.schema.Schema.createTable(Schema.java:670)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:100)
	at org.h2.command.CommandContainer.update(CommandContainer.java:102)
	at org.h2.command.Command.executeUpdate(Command.java:261)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:249)
	at org.apache.commons.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:94)
	at org.apache.commons.dbcp2.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:94)
	at scalikejdbc.DBConnectionAttributesWiredPreparedStatement.execute(DBConnectionAttributesWiredPreparedStatement.scala:63)
	at scalikejdbc.StatementExecutor.$anonfun$execute$1(StatementExecutor.scala:377)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:12)
	at scalikejdbc.StatementExecutor$NakedExecutor.apply(StatementExecutor.scala:21)
	at scalikejdbc.StatementExecutor$$anon$1.scalikejdbc$StatementExecutor$LoggingSQLAndTiming$$super$apply(StatementExecutor.scala:371)
	at scalikejdbc.StatementExecutor$LoggingSQLAndTiming.apply(StatementExecutor.scala:315)
	at scalikejdbc.StatementExecutor$LoggingSQLAndTiming.apply$(StatementExecutor.scala:301)
	at scalikejdbc.StatementExecutor$$anon$1.scalikejdbc$StatementExecutor$LoggingSQLIfFailed$$super$apply(StatementExecutor.scala:371)
	at scalikejdbc.StatementExecutor$LoggingSQLIfFailed.apply(StatementExecutor.scala:348)
	at scalikejdbc.StatementExecutor$LoggingSQLIfFailed.apply$(StatementExecutor.scala:347)
	at scalikejdbc.StatementExecutor$$anon$1.apply(StatementExecutor.scala:371)
	at scalikejdbc.StatementExecutor.execute(StatementExecutor.scala:377)
	at scalikejdbc.DBSession.$anonfun$executeWithFilters$1(DBSession.scala:398)
	at scalikejdbc.DBSession.$anonfun$executeWithFilters$1$adapted(DBSession.scala:396)
	at scalikejdbc.LoanPattern.using(LoanPattern.scala:18)
	at scalikejdbc.LoanPattern.using$(LoanPattern.scala:16)
	at scalikejdbc.ActiveSession.using(DBSession.scala:837)
	at scalikejdbc.DBSession.executeWithFilters(DBSession.scala:396)
	at scalikejdbc.DBSession.executeWithFilters$(DBSession.scala:389)
	at scalikejdbc.ActiveSession.executeWithFilters(DBSession.scala:837)
	at scalikejdbc.DBSessionWrapper.$anonfun$executeWithFilters$1(DBSessionWrapper.scala:71)
	at scalikejdbc.DBSessionWrapper.$anonfun$executeWithFilters$1$adapted(DBSessionWrapper.scala:71)
	at scalikejdbc.DBSessionWrapper.$anonfun$withAttributesSwitchedDBSession$1(DBSessionWrapper.scala:34)
	at scalikejdbc.DBSessionAttributesSwitcher.withSwitchedDBSession(DBSessionAttributesSwitcher.scala:31)
	at scalikejdbc.DBSessionWrapper.withAttributesSwitchedDBSession(DBSessionWrapper.scala:33)
	at scalikejdbc.DBSessionWrapper.executeWithFilters(DBSessionWrapper.scala:71)
	at scalikejdbc.SQLExecution.$anonfun$apply$11(SQL.scala:684)
	at scalikejdbc.SQLExecution.$anonfun$apply$11$adapted(SQL.scala:684)
	at scalikejdbc.SQLExecution.apply(SQL.scala:691)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$createTables$1(DBHelper.scala:44)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$createTables$1$adapted(DBHelper.scala:9)
	at scalikejdbc.DBConnection.$anonfun$autoCommit$1(DBConnection.scala:241)
	at scalikejdbc.LoanPattern.using(LoanPattern.scala:18)
	at scalikejdbc.LoanPattern.using$(LoanPattern.scala:16)
	at scalikejdbc.NamedDB.using(NamedDB.scala:20)
	at scalikejdbc.DBConnection.autoCommit(DBConnection.scala:241)
	at scalikejdbc.DBConnection.autoCommit$(DBConnection.scala:240)
	at scalikejdbc.NamedDB.autoCommit(NamedDB.scala:20)
	at org.mai.dep810.scala.stackoverflow.DBHelper.createTables(DBHelper.scala:9)
	at org.mai.dep810.scala.stackoverflow.DBHelper.createTables$(DBHelper.scala:9)
	at org.mai.dep810.scala.stackoverflow.MainTest$$anon$1.createTables(MainTest.scala:15)
	at org.mai.dep810.scala.stackoverflow.MainTest$.delayedEndpoint$org$mai$dep810$scala$stackoverflow$MainTest$1(MainTest.scala:20)
	at org.mai.dep810.scala.stackoverflow.MainTest$delayedInit$body.apply(MainTest.scala:9)
	at scala.Function0.apply$mcV$sp(Function0.scala:34)
	at scala.Function0.apply$mcV$sp$(Function0.scala:34)
	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
	at scala.App.$anonfun$main$1$adapted(App.scala:76)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at scala.App.main(App.scala:76)
	at scala.App.main$(App.scala:74)
	at org.mai.dep810.scala.stackoverflow.MainTest$.main(MainTest.scala:9)
	at org.mai.dep810.scala.stackoverflow.MainTest.main(MainTest.scala)
2019-12-10 22:58:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Столбец "VIEW_COUNT" не найден
Column "VIEW_COUNT" not found; SQL statement:
insert into posts (id, title, body, score, view_count, answer_count, comment_count, owner_user_id, last_editor_user_id, accepted_answer_id, creation_date, last_edit_date, last_activity_date) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [42122-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:936)
	at org.h2.command.Parser.parseColumnList(Parser.java:920)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1258)
	at org.h2.command.Parser.parseInsert(Parser.java:1222)
	at org.h2.command.Parser.parsePrepared(Parser.java:431)
	at org.h2.command.Parser.parse(Parser.java:335)
	at org.h2.command.Parser.parse(Parser.java:307)
	at org.h2.command.Parser.prepareCommand(Parser.java:278)
	at org.h2.engine.Session.prepareLocal(Session.java:611)
	at org.h2.engine.Session.prepareCommand(Session.java:549)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1247)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:76)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:304)
	at org.apache.commons.dbcp2.DelegatingConnection.prepareStatement(DelegatingConnection.java:292)
	at org.apache.commons.dbcp2.DelegatingConnection.prepareStatement(DelegatingConnection.java:292)
	at scalikejdbc.DBSession.createStatementExecutor(DBSession.scala:88)
	at scalikejdbc.DBSession.updateWithFiltersInternal(DBSession.scala:530)
	at scalikejdbc.DBSession.updateWithFilters(DBSession.scala:477)
	at scalikejdbc.DBSession.updateWithFilters$(DBSession.scala:466)
	at scalikejdbc.ActiveSession.updateWithFilters(DBSession.scala:837)
	at scalikejdbc.DBSession.updateWithFilters(DBSession.scala:454)
	at scalikejdbc.DBSession.updateWithFilters$(DBSession.scala:450)
	at scalikejdbc.ActiveSession.updateWithFilters(DBSession.scala:837)
	at scalikejdbc.DBSessionWrapper.$anonfun$updateWithFilters$1(DBSessionWrapper.scala:80)
	at scalikejdbc.DBSessionWrapper.$anonfun$updateWithFilters$1$adapted(DBSessionWrapper.scala:80)
	at scalikejdbc.DBSessionWrapper.$anonfun$withAttributesSwitchedDBSession$1(DBSessionWrapper.scala:34)
	at scalikejdbc.DBSessionAttributesSwitcher.withSwitchedDBSession(DBSessionAttributesSwitcher.scala:31)
	at scalikejdbc.DBSessionWrapper.withAttributesSwitchedDBSession(DBSessionWrapper.scala:33)
	at scalikejdbc.DBSessionWrapper.updateWithFilters(DBSessionWrapper.scala:80)
	at scalikejdbc.SQLUpdate.apply(SQL.scala:728)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$saveData$3(DBHelper.scala:124)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$saveData$3$adapted(DBHelper.scala:106)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$saveData$1(DBHelper.scala:106)
	at org.mai.dep810.scala.stackoverflow.DBHelper.$anonfun$saveData$1$adapted(DBHelper.scala:83)
	at scalikejdbc.DBConnection.$anonfun$autoCommit$1(DBConnection.scala:241)
	at scalikejdbc.LoanPattern.using(LoanPattern.scala:18)
	at scalikejdbc.LoanPattern.using$(LoanPattern.scala:16)
	at scalikejdbc.NamedDB.using(NamedDB.scala:20)
	at scalikejdbc.DBConnection.autoCommit(DBConnection.scala:241)
	at scalikejdbc.DBConnection.autoCommit$(DBConnection.scala:240)
	at scalikejdbc.NamedDB.autoCommit(NamedDB.scala:20)
	at org.mai.dep810.scala.stackoverflow.DBHelper.saveData(DBHelper.scala:83)
	at org.mai.dep810.scala.stackoverflow.DBHelper.saveData$(DBHelper.scala:83)
	at org.mai.dep810.scala.stackoverflow.Main$$anon$1.saveData(Main.scala:18)
	at org.mai.dep810.scala.stackoverflow.Main$.delayedEndpoint$org$mai$dep810$scala$stackoverflow$Main$1(Main.scala:54)
	at org.mai.dep810.scala.stackoverflow.Main$delayedInit$body.apply(Main.scala:8)
	at scala.Function0.apply$mcV$sp(Function0.scala:34)
	at scala.Function0.apply$mcV$sp$(Function0.scala:34)
	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
	at scala.App.$anonfun$main$1$adapted(App.scala:76)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at scala.App.main(App.scala:76)
	at scala.App.main$(App.scala:74)
	at org.mai.dep810.scala.stackoverflow.Main$.main(Main.scala:8)
	at org.mai.dep810.scala.stackoverflow.Main.main(Main.scala)
2019-12-10 23:21:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Значение слишком длинное для поля "BODY VARCHAR(1000)": "STRINGDECODE('<p>The question is really broad---as stated by @thecomplexitytheorist---so difficult to give a meaningful answer. ... (3245)"
Value too long for column "BODY VARCHAR(1000)": "STRINGDECODE('<p>The question is really broad---as stated by @thecomplexitytheorist---so difficult to give a meaningful answer. ... (3245)"; SQL statement:
insert into posts (id, title, body, score, viewcount, answercount, commentcount, owneruserid, lasteditoruserid, acceptedanswerid, creationdate, lasteditdate, lastactivitydate) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) [22001-197]
